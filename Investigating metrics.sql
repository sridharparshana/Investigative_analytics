#the number of jobs reviewed per hour per day for November 2020
SELECT DS, COUNT(JOB_ID) AS JOBS_PER_DAY, SUM(TIME_SPENT)/3600 AS HOURS_SPENT
FROM OS_IM.O_ANALYTICS
WHERE DS BETWEEN "01-11-2020" AND "30-11-2020"
GROUP BY DS;


#7 day rolling average of throughput
#throughtput - calcualting rolling average
SELECT DS, JOBS_REVIEWED,
AVG(JOBS_REVIEWED)over(order by ds rows between 6 preceding and current row) AS ROLLING_AVERAGE
FROM
(SELECT DS,COUNT(DISTINCT JOB_ID) AS JOBS_REVIEWED
FROM OS_IM.O_ANALYTICS
WHERE DS BETWEEN "01-11-2020" AND "30-11-2020"
GROUP BY DS
ORDER BY DS
)A;


#the percentage share of each language in the last 30 days.
SELECT LANGUAGE, COUNT(*)*100/(SELECT COUNT(*) FROM OS_IM.O_ANALYTICS) AS PERCENTAGE
FROM OS_IM.O_ANALYTICS
GROUP BY LANGUAGE;



# displaying duplicate rows
SELECT * FROM(SELECT*,ROW_NUMBER() OVER(PARTITION BY JOB_ID) AS ROWNUM FROM OS_IM.O_ANALYTICS)A WHERE ROWNUM>1;



-- USER WEEKLY ENGAGEMENT
SELECT
EXTRACT(WEEK FROM occurred_at)AS WEEK_NUMBER,
COUNT(DISTINCT USER_ID)AS USERS
FROM SPIKE.EVENTS
GROUP BY
WEEK_NUMBER;




-- USER GROWTH

SELECT YEAR,WEEK_NUMBER, NUM_USERS,
SUM(NUM_USERS) OVER(ORDER BY YEAR,WEEK_NUMBER ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUMULATIVE_ACTIVE_USERS
FROM
(
SELECT EXTRACT(YEAR FROM ACTIVATED_AT ) AS YEAR,
EXTRACT(WEEK FROM ACTIVATED_AT)AS WEEK_NUMBER,
COUNT(DISTINCT USER_ID) AS NUM_USERS
FROM SPIKE.USERS1
WHERE STATE='ACTIVE'
GROUP BY YEAR,WEEK_NUMBER
ORDER BY YEAR,WEEK_NUMBER)A;




-- WEEKLY_RETENSION
SELECT EXTRACT(YEAR FROM OCCURRED_AT)AS YEAR,
EXTRACT(WEEK FROM OCCURRED_AT)AS WEEK_NUMBER,
DEVICE, COUNT(DISTINCT USER_ID) USER_TYPE
FROM SPIKE.EVENTS
WHERE EVENT_TYPE ='ENGAGEMENT'
GROUP BY 1,2,3
ORDER BY 1,2,3;


#WEEKLY ENGAGEMENT
SELECT
EXTRACT(WEEK FROM occurred_at)AS WEEK_NUMBER,
COUNT(DISTINCT USER_ID)AS USERS,
DEVICE
FROM SPIKE.EVENTS
GROUP BY
DEVICE;


-- EMAIL_ENGAGEMENT

#EMAIL ACTIVITY AND CLICK THROUGH RATES(CTR)

SELECT ACTION,
	EXTRACT(MONTH FROM OCCURRED_AT) AS MONTH,
    COUNT(ACTION) AS NUMBER_OF_MAILS
FROM SPIKE.EMAIL_EVENTS
GROUP BY ACTION,MONTH
ORDER BY ACTION,MONTH;


#ABSOLUTE CHANGES IN EMAIL

WITH TWO AS(
WITH ONE AS(
SELECT 
	CONCAT(EXTRACT(MONTH FROM OCCURRED_AT), '-', EXTRACT(YEAR FROM OCCURRED_AT)) AS DATE,
	EVENT_NAME,
	COUNT(EVENT_NAME) AS EVENT_COUNT
FROM SPIKE.EVENTS
GROUP BY DATE,EVENT_NAME
)
SELECT *,
	(EVENT_COUNT - LAG(EVENT_COUNT) OVER(ORDER BY EVENT_NAME ASC, DATE ASC)) AS ABSOLUTE_CHANGE
FROM ONE
)
SELECT *
FROM TWO
WHERE DATE='5-2014'
AND
ABSOLUTE_CHANGE<0
ORDER BY ABSOLUTE_CHANGE